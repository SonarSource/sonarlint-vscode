pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: sonarsource-build-variables

resources:
  repositories:
    - repository: commonTemplates
      type: git
      name: pipelines-yaml-templates
      ref:  refs/tags/v1.0.1

stages:
- template: stage-with-burgr-notifications.yml@commonTemplates
  parameters:
    burgrName: 'build'
    burgrType: 'build'
    stageName: 'build'
    stageDisplayName: Build and stage to repox
    jobs:
    - job: build
      displayName: Build and stage to repox
      variables:
        npm_config_cache: $(Pipeline.Workspace)/.npm
      steps:
      - checkout: self
        fetchDepth: 1
      - task: CacheBeta@0
        displayName: Cache NPM dependencies
        inputs:
          key: npm | $(Agent.OS) | package-lock.json
          path: $(npm_config_cache)
      - task: NodeTool@0
        displayName: 'Install NPM LTS'
        inputs:
          versionSpec: '10.16.x'
          checkLatest: true
      - task: Npm@1
        displayName: 'Install NPM dependencies'
        inputs:
          command: install
      - task: gulp@1
        displayName: 'Build and deploy VSIX'
        condition: eq(variables['Build.Reason'], 'PullRequest')
        env:
          ARTIFACTORY_DEPLOY_USERNAME: $(ARTIFACTORY_DEPLOY_USERNAME)
          ARTIFACTORY_DEPLOY_PASSWORD: $(ARTIFACTORY_DEPLOY_PASSWORD)
        inputs:
          targets: clean deploy
      - bash: git checkout .
        name: revertPackageJsonChanges
        displayName: Revert changes made to package.json to not break cache feature
- template: stage-with-burgr-notifications.yml@commonTemplates
  parameters:
    burgrName: 'validate'
    burgrType: 'validate'
    stageName: 'validate'
    stageDisplayName: Run tests and SonarQube analysis
    jobs:
    - job: extractPackageVersion
      displayName: 'Extract version from package.json'
      steps:
      - task: PythonScript@0
        name: extractPackageVersion
        displayName: Extract version from package.json
        inputs:
          scriptSource: 'inline'
          script: |
            import json
            with open('package.json') as packageJsonFile:
              packageJson = json.load(packageJsonFile)
              print("##vso[task.setvariable variable=packageVersion;isOutput=true]" + packageJson['version'])
    - job: test
      dependsOn: extractPackageVersion
      displayName: Run tests and SonarQube analysis
      variables:
        npm_config_cache: $(Pipeline.Workspace)/.npm
        packageVersion: $[ dependencies.extractPackageVersion.outputs['extractPackageVersion.packageVersion'] ]
      steps:
      - checkout: self
      - task: CacheBeta@0
        displayName: Cache NPM dependencies
        inputs:
          key: npm | $(Agent.OS) | package-lock.json
          path: $(npm_config_cache)
      - bash: |
          set -euo pipefail
          sudo apt-get update
          sudo apt-get install -y xvfb
          sudo cp .azure-pipelines/xvfb.init /etc/init.d/xvfb
          sudo chmod +x /etc/init.d/xvfb
          sudo update-rc.d xvfb defaults
          sudo service xvfb start
          export DISPLAY=':10'
        displayName: 'Install and start xvfb'
      - task: SonarQubePrepare@4
        displayName: Prepare SonarQube analysis on Next
        inputs:
          SonarQube: Next
          scannerMode: CLI
          configMode: manual
          cliProjectKey: 'org.sonarsource.sonarlint.vscode:sonarlint-vscode'
          cliProjectName: 'SonarLint for VSCode'
          cliProjectVersion: $(packageVersion)
          extraProperties: |
            sonar.tests=test
            sonar.exclusions=test/**, build/**, out/**, out-cov/**, coverage/**, node_modules/**, **/node_modules/**
            sonar.typescript.lcov.reportPaths=coverage/lcov.info
            sonar.coverage.exclusions=gulpfile.js, webpack.config.js, scripts/**
      - task: NodeTool@0
        displayName: 'Install NPM LTS'
        inputs:
          versionSpec: '10.16.x'
          checkLatest: true
      - task: Npm@1
        displayName: 'Install NPM dependencies'
        inputs:
          command: install
      - task: Npm@1
        displayName: 'Compile TypeScript'
        inputs:
          command: custom
          customCommand: run compile
      - task: Npm@1
        displayName: 'Fetch language server and its dependencies'
        continueOnError: true
        inputs:
          command: custom
          customCommand: run prepare
      - task: Npm@1
        displayName: 'Run tests with coverage'
        continueOnError: true
        inputs:
          command: custom
          customCommand: run test-cov
      - bash: git checkout .
        name: revertPackageJsonChanges
        displayName: Revert changes made to package.json to not break cache feature
      - task: SonarQubeAnalyze@4
        displayName: 'Run SonarQube analysis on Next'
